<?php

/**
* @package   s9e\TextFormatter
* @copyright Copyright (c) 2010-2013 The s9e Authors
* @license   http://www.opensource.org/licenses/mit-license.php The MIT License
*/
namespace s9e\TextFormatter\Configurator\Helpers;

use DOMDocument;
use DOMNode;
use RuntimeException;

class XPathParser
{
	/**
	* Parse an XPath expression
	*
	* @link http://www.w3.org/TR/xpath/
	*
	* @param  string      $expr      XPath expression
	* @param  string      $tokenName Start token, e.g. "Expr" or "LocationPath"
	* @return DOMDocument
	*/
	public static function parse($expr, $tokenName = 'Expr')
	{
		$dom = new DOMDocument;

		self::appendExpr($dom, $expr, $tokenName);

		return $dom;
	}

	/**
	* Append the representation of given expression
	*
	* @param  DOMNode $node      Host node
	* @param  string  $expr      XPath expression
	* @param  string  $tokenName Start token
	* @return void
	*/
	protected static function appendExpr(DOMNode $node, $expr, $tokenName)
	{
		$regexp = self::$regexps[$tokenName];

		if (!preg_match($regexp, $expr, $matches, PREG_OFFSET_CAPTURE))
		{
			throw new RuntimeException("Cannot parse '" . $expr . "' as " . $tokenName);
		}

		// Create a node if the token name starts with a capital. Tokens from the specs are
		// capitalized, custom ones are in lowercase
		if (preg_match('#^[A-Z]#', $tokenName))
		{
			$doc  = ($node instanceof DOMDocument) ? $node : $node->ownerDocument;
			$node = $node->appendChild($doc->createElement($tokenName));
		}

		$pos = 0;
		foreach ($matches as $k => list($matchText, $matchPos))
		{
			if ($matchPos < $pos
			 || $matchText === ''
			 || is_numeric($k))
			{
				continue;
			}

			if ($matchPos !== $pos)
			{
				$node->appendChild(
					$node->ownerDocument->createTextNode(substr($expr, $pos, $matchPos - $pos))
				);
			}

			$tokenName = rtrim($k, '0123456789');
			self::appendExpr($node, $matchText, $tokenName);
			$pos = $matchPos + strlen($matchText);
		}

		if ($pos < strlen($expr))
		{
			$node->appendChild($node->ownerDocument->createTextNode(substr($expr, $pos)));
		}
	}

	/**
	* @var array Regexps used for matching tokens
	*
	* @see scripts/patchXPathParser.php
	*/
	protected static $regexps = [
		'AbbreviatedAbsoluteLocationPath' => '(^\\s*(?://\\s*(?<RelativeLocationPath1>(?<a>(?<b>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<m>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?<n>(?:(?:(?&m))\\s*:\\s*(?<t>(?&m)))\\s*|\\s*(?:(?&t))))\\s*|\\s*(?<j>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?<k>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*\\))\\s*(?:(?<e>(?:\\[\\s*(?:(?<r>(?:(?<v>(?:(?<x>(?<y>(?<z>(?<aa>(?<ac>(?:(?:(?:(?:\\$\\s*(?&n))\\s*|\\s*\\(\\s*(?&r)\\s*\\)\\s*|\\s*(?&k)\\s*|\\s*(?:(?<am>[0-9]+)\\s*(?:\\.\\s*(?&am)?)?\\s*|\\s*\\.\\s*(?&am))\\s*|\\s*(?:(?:(?!(?&j))(?&n))\\s*\\(\\s*(?:(?<ao>(?:(?&r))\\s*(?:,\\s*(?:(?&ao)))?))?\\s*\\)))\\s*(?:(?&e))?)\\s*(?://?\\s*(?&a))?\\s*|\\s*(?:(?&a)\\s*|\\s*(?://?\\s*(?&a)?\\s*|\\s*(?://\\s*(?&a)))))\\s*(?:\\|\\s*(?&ac))?)\\s*|\\s*-\\s*(?&aa))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&aa))?)\\s*(?:[-+]\\s*(?&z))?)\\s*(?:[<>]=?\\s*(?&y))?)\\s*(?:!?=\\s*(?&x))?)\\s*(?:and\\s*(?&v))?)\\s*(?:or\\s*(?&v))?)))\\s*\\])\\s*(?:(?&e))?))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&b)\\s*//?)*\\s*(?&b))\\s*//?\\s*(?&b))))\\s*$)',
		'AbbreviatedAxisSpecifier' => '(^\\s*(?:@?)\\s*$)',
		'AbbreviatedRelativeLocationPath' => '(^\\s*(?:(?<Step1>(?<a>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<m>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?<n>(?:(?:(?&m))\\s*:\\s*(?<t>(?&m)))\\s*|\\s*(?:(?&t))))\\s*|\\s*(?<j>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?<k>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*\\))\\s*(?:(?<e>(?:\\[\\s*(?:(?<r>(?:(?<v>(?:(?<x>(?<y>(?<z>(?<aa>(?<ac>(?:(?:(?:(?:\\$\\s*(?&n))\\s*|\\s*\\(\\s*(?&r)\\s*\\)\\s*|\\s*(?&k)\\s*|\\s*(?:(?<am>[0-9]+)\\s*(?:\\.\\s*(?&am)?)?\\s*|\\s*\\.\\s*(?&am))\\s*|\\s*(?:(?:(?!(?&j))(?&n))\\s*\\(\\s*(?:(?<ao>(?:(?&r))\\s*(?:,\\s*(?:(?&ao)))?))?\\s*\\)))\\s*(?:(?&e))?)\\s*(?://?\\s*(?&b))?\\s*|\\s*(?:(?&b)\\s*|\\s*(?://?\\s*(?&b)?\\s*|\\s*(?://\\s*(?&b)))))\\s*(?:\\|\\s*(?&ac))?)\\s*|\\s*-\\s*(?&aa))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&aa))?)\\s*(?:[-+]\\s*(?&z))?)\\s*(?:[<>]=?\\s*(?&y))?)\\s*(?:!?=\\s*(?&x))?)\\s*(?:and\\s*(?&v))?)\\s*(?:or\\s*(?&v))?)))\\s*\\])\\s*(?:(?&e))?))?\\s*|\\s*(?:\\.\\.?)))\\s*//\\s*(?<RelativeLocationPath2>(?<b>(?&a)\\s*|\\s*(?:(?:(?&a)\\s*//?)*\\s*(?&a))\\s*//?\\s*(?&a))))\\s*$)',
		'AbbreviatedStep' => '(^\\s*(?:\\.\\.?)\\s*$)',
		'AbsoluteLocationPath' => '(^\\s*(?://?\\s*(?<RelativeLocationPath1>(?<a>(?<c>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<n>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?<o>(?:(?:(?&n))\\s*:\\s*(?<u>(?&n)))\\s*|\\s*(?:(?&u))))\\s*|\\s*(?<k>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?<l>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*\\))\\s*(?:(?<f>(?:\\[\\s*(?:(?<s>(?:(?<w>(?:(?<y>(?<z>(?<aa>(?<ab>(?<ad>(?:(?:(?:(?:\\$\\s*(?&o))\\s*|\\s*\\(\\s*(?&s)\\s*\\)\\s*|\\s*(?&l)\\s*|\\s*(?:(?<am>[0-9]+)\\s*(?:\\.\\s*(?&am)?)?\\s*|\\s*\\.\\s*(?&am))\\s*|\\s*(?:(?:(?!(?&k))(?&o))\\s*\\(\\s*(?:(?<ao>(?:(?&s))\\s*(?:,\\s*(?:(?&ao)))?))?\\s*\\)))\\s*(?:(?&f))?)\\s*(?://?\\s*(?&a))?\\s*|\\s*(?:(?&a)\\s*|\\s*(?://?\\s*(?&a)?\\s*|\\s*(?&b))))\\s*(?:\\|\\s*(?&ad))?)\\s*|\\s*-\\s*(?&ab))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&ab))?)\\s*(?:[-+]\\s*(?&aa))?)\\s*(?:[<>]=?\\s*(?&z))?)\\s*(?:!?=\\s*(?&y))?)\\s*(?:and\\s*(?&w))?)\\s*(?:or\\s*(?&w))?)))\\s*\\])\\s*(?:(?&f))?))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&c)\\s*//?)*\\s*(?&c))\\s*//?\\s*(?&c)))?\\s*|\\s*(?<AbbreviatedAbsoluteLocationPath2>(?<b>//\\s*(?&a))))\\s*$)',
		'AdditiveExpr' => '(^\\s*(?:(?<MultiplicativeExpr1>(?<a>(?<b>(?<d>(?:(?:(?:(?:\\$\\s*(?<w>(?:(?:(?&ak))\\s*:\\s*(?<am>(?&ak)))\\s*|\\s*(?:(?&am))))\\s*|\\s*\\(\\s*(?<n>(?:(?<ai>(?:(?<ao>(?<ap>(?&a)\\s*(?:[-+]\\s*(?&a))?)\\s*(?:[<>]=?\\s*(?&ap))?)\\s*(?:!?=\\s*(?&ao))?)\\s*(?:and\\s*(?&ai))?)\\s*(?:or\\s*(?&ai))?))\\s*\\)\\s*|\\s*(?<o>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<y>[0-9]+)\\s*(?:\\.\\s*(?&y)?)?\\s*|\\s*\\.\\s*(?&y))\\s*|\\s*(?:(?:(?!(?&af))(?&w))\\s*\\(\\s*(?:(?<aa>(?:(?&n))\\s*(?:,\\s*(?:(?&aa)))?))?\\s*\\)))\\s*(?:(?<j>(?:\\[\\s*(?:(?&n))\\s*\\])\\s*(?:(?&j))?))?)\\s*(?://?\\s*(?<g>(?<k>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<ak>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&w))\\s*|\\s*(?<af>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&o)\\s*\\))\\s*(?:(?&j))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&k)\\s*//?)*\\s*(?&k))\\s*//?\\s*(?&k)))?\\s*|\\s*(?:(?&g)\\s*|\\s*(?://?\\s*(?&g)?\\s*|\\s*(?://\\s*(?&g)))))\\s*(?:\\|\\s*(?&d))?)\\s*|\\s*-\\s*(?&b))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&b))?))\\s*(?:[-+]\\s*(?<MultiplicativeExpr2>(?&a)))?)\\s*$)',
		'AndExpr' => '(^\\s*(?:(?<EqualityExpr1>(?<a>(?<c>(?<d>(?<e>(?<f>(?<h>(?:(?:(?:(?:\\$\\s*(?<aa>(?:(?:(?&an))\\s*:\\s*(?<ap>(?&an)))\\s*|\\s*(?:(?&ap))))\\s*|\\s*\\(\\s*(?<r>(?:(?&b)\\s*(?:or\\s*(?&b))?))\\s*\\)\\s*|\\s*(?<s>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<ac>[0-9]+)\\s*(?:\\.\\s*(?&ac)?)?\\s*|\\s*\\.\\s*(?&ac))\\s*|\\s*(?:(?:(?!(?&aj))(?&aa))\\s*\\(\\s*(?:(?<ae>(?:(?&r))\\s*(?:,\\s*(?:(?&ae)))?))?\\s*\\)))\\s*(?:(?<n>(?:\\[\\s*(?:(?&r))\\s*\\])\\s*(?:(?&n))?))?)\\s*(?://?\\s*(?<k>(?<o>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<an>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&aa))\\s*|\\s*(?<aj>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&s)\\s*\\))\\s*(?:(?&n))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&o)\\s*//?)*\\s*(?&o))\\s*//?\\s*(?&o)))?\\s*|\\s*(?:(?&k)\\s*|\\s*(?://?\\s*(?&k)?\\s*|\\s*(?://\\s*(?&k)))))\\s*(?:\\|\\s*(?&h))?)\\s*|\\s*-\\s*(?&f))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&f))?)\\s*(?:[-+]\\s*(?&e))?)\\s*(?:[<>]=?\\s*(?&d))?)\\s*(?:!?=\\s*(?&c))?))\\s*(?:and\\s*(?<AndExpr2>(?<b>(?&a)\\s*(?:and\\s*(?&b))?)))?)\\s*$)',
		'Argument' => '(^\\s*(?:(?<Expr1>(?<a>(?:(?<c>(?:(?<e>(?<f>(?<g>(?<h>(?<j>(?:(?:(?:(?:\\$\\s*(?<ab>(?:(?:(?&an))\\s*:\\s*(?<ap>(?&an)))\\s*|\\s*(?:(?&ap))))\\s*|\\s*\\(\\s*(?&a)\\s*\\)\\s*|\\s*(?<t>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<ac>[0-9]+)\\s*(?:\\.\\s*(?&ac)?)?\\s*|\\s*\\.\\s*(?&ac))\\s*|\\s*(?:(?:(?!(?&aj))(?&ab))\\s*\\(\\s*(?:(?<ae>(?:(?&a))\\s*(?:,\\s*(?:(?&ae)))?))?\\s*\\)))\\s*(?:(?<p>(?:\\[\\s*(?:(?&a))\\s*\\])\\s*(?:(?&p))?))?)\\s*(?://?\\s*(?<m>(?<q>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<an>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&ab))\\s*|\\s*(?<aj>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&t)\\s*\\))\\s*(?:(?&p))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&q)\\s*//?)*\\s*(?&q))\\s*//?\\s*(?&q)))?\\s*|\\s*(?:(?&m)\\s*|\\s*(?://?\\s*(?&m)?\\s*|\\s*(?://\\s*(?&m)))))\\s*(?:\\|\\s*(?&j))?)\\s*|\\s*-\\s*(?&h))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&h))?)\\s*(?:[-+]\\s*(?&g))?)\\s*(?:[<>]=?\\s*(?&f))?)\\s*(?:!?=\\s*(?&e))?)\\s*(?:and\\s*(?&c))?)\\s*(?:or\\s*(?&c))?))))\\s*$)',
		'AxisName' => '(^\\s*(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*$)',
		'AxisSpecifier' => '(^\\s*(?:(?<AxisName1>(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self))\\s*::\\s*|\\s*(?<AbbreviatedAxisSpecifier2>(?:@?)))\\s*$)',
		'Digits' => '(^\\s*(?:[0-9]+)\\s*$)',
		'EqualityExpr' => '(^\\s*(?:(?<RelationalExpr1>(?<a>(?<b>(?<c>(?<d>(?<f>(?:(?:(?:(?:\\$\\s*(?<y>(?:(?:(?&am))\\s*:\\s*(?<ao>(?&am)))\\s*|\\s*(?:(?&ao))))\\s*|\\s*\\(\\s*(?<p>(?:(?<ak>(?:(?&a)\\s*(?:!?=\\s*(?&a))?)\\s*(?:and\\s*(?&ak))?)\\s*(?:or\\s*(?&ak))?))\\s*\\)\\s*|\\s*(?<q>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<aa>[0-9]+)\\s*(?:\\.\\s*(?&aa)?)?\\s*|\\s*\\.\\s*(?&aa))\\s*|\\s*(?:(?:(?!(?&ah))(?&y))\\s*\\(\\s*(?:(?<ac>(?:(?&p))\\s*(?:,\\s*(?:(?&ac)))?))?\\s*\\)))\\s*(?:(?<l>(?:\\[\\s*(?:(?&p))\\s*\\])\\s*(?:(?&l))?))?)\\s*(?://?\\s*(?<i>(?<m>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<am>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&y))\\s*|\\s*(?<ah>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&q)\\s*\\))\\s*(?:(?&l))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&m)\\s*//?)*\\s*(?&m))\\s*//?\\s*(?&m)))?\\s*|\\s*(?:(?&i)\\s*|\\s*(?://?\\s*(?&i)?\\s*|\\s*(?://\\s*(?&i)))))\\s*(?:\\|\\s*(?&f))?)\\s*|\\s*-\\s*(?&d))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&d))?)\\s*(?:[-+]\\s*(?&c))?)\\s*(?:[<>]=?\\s*(?&b))?))\\s*(?:!?=\\s*(?<RelationalExpr2>(?&a)))?)\\s*$)',
		'Expr' => '(^\\s*(?:(?<OrExpr1>(?<a>(?<b>(?:(?<d>(?<e>(?<f>(?<g>(?<i>(?:(?:(?:(?:\\$\\s*(?<ab>(?:(?:(?&an))\\s*:\\s*(?<ap>(?&an)))\\s*|\\s*(?:(?&ap))))\\s*|\\s*\\(\\s*(?<s>(?&a))\\s*\\)\\s*|\\s*(?<t>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<ac>[0-9]+)\\s*(?:\\.\\s*(?&ac)?)?\\s*|\\s*\\.\\s*(?&ac))\\s*|\\s*(?:(?:(?!(?&aj))(?&ab))\\s*\\(\\s*(?:(?<ae>(?:(?&s))\\s*(?:,\\s*(?:(?&ae)))?))?\\s*\\)))\\s*(?:(?<o>(?:\\[\\s*(?:(?&s))\\s*\\])\\s*(?:(?&o))?))?)\\s*(?://?\\s*(?<l>(?<p>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<an>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&ab))\\s*|\\s*(?<aj>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&t)\\s*\\))\\s*(?:(?&o))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&p)\\s*//?)*\\s*(?&p))\\s*//?\\s*(?&p)))?\\s*|\\s*(?:(?&l)\\s*|\\s*(?://?\\s*(?&l)?\\s*|\\s*(?://\\s*(?&l)))))\\s*(?:\\|\\s*(?&i))?)\\s*|\\s*-\\s*(?&g))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&g))?)\\s*(?:[-+]\\s*(?&f))?)\\s*(?:[<>]=?\\s*(?&e))?)\\s*(?:!?=\\s*(?&d))?)\\s*(?:and\\s*(?&b))?)\\s*(?:or\\s*(?&b))?)))\\s*$)',
		'FilterExpr' => '(^\\s*(?:(?<PrimaryExpr1>(?<a>(?:\\$\\s*(?<i>(?:(?:(?<w>[-\\w]+))\\s*:\\s*(?<u>(?&w)))\\s*|\\s*(?:(?&u))))\\s*|\\s*\\(\\s*(?<d>(?:(?<q>(?:(?<x>(?<y>(?<z>(?<aa>(?<ac>(?:(?:(?&a)\\s*(?:(?&b))?)\\s*(?://?\\s*(?<af>(?<ah>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?&w)\\s*:\\s*\\*\\s*|\\s*(?&i))\\s*|\\s*(?&r)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&e)\\s*\\))\\s*(?:(?&b))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&ah)\\s*//?)*\\s*(?&ah))\\s*//?\\s*(?&ah)))?\\s*|\\s*(?:(?&af)\\s*|\\s*(?://?\\s*(?&af)?\\s*|\\s*(?://\\s*(?&af)))))\\s*(?:\\|\\s*(?&ac))?)\\s*|\\s*-\\s*(?&aa))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&aa))?)\\s*(?:[-+]\\s*(?&z))?)\\s*(?:[<>]=?\\s*(?&y))?)\\s*(?:!?=\\s*(?&x))?)\\s*(?:and\\s*(?&q))?)\\s*(?:or\\s*(?&q))?))\\s*\\)\\s*|\\s*(?<e>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<k>[0-9]+)\\s*(?:\\.\\s*(?&k)?)?\\s*|\\s*\\.\\s*(?&k))\\s*|\\s*(?:(?:(?!(?<r>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node))(?&i))\\s*\\(\\s*(?:(?<m>(?:(?&d))\\s*(?:,\\s*(?:(?&m)))?))?\\s*\\))))\\s*(?<predicates0>(?<predicates2>(?<b>(?:\\[\\s*(?:(?&d))\\s*\\])\\s*(?:(?&b))?)))?)\\s*$)',
		'FunctionCall' => '(^\\s*(?:(?<FunctionName1>(?<a>(?!(?<c>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node))(?<d>(?:(?:(?<l>[-\\w]+))\\s*:\\s*(?<j>(?&l)))\\s*|\\s*(?:(?&j)))))\\s*\\(\\s*(?<arguments0>(?<arguments2>(?<b>(?:(?<h>(?:(?<m>(?:(?<o>(?<p>(?<q>(?<r>(?<t>(?:(?:(?:(?:\\$\\s*(?&d))\\s*|\\s*\\(\\s*(?&h)\\s*\\)\\s*|\\s*(?<ad>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<al>[0-9]+)\\s*(?:\\.\\s*(?&al)?)?\\s*|\\s*\\.\\s*(?&al))\\s*|\\s*(?:(?&a)\\s*\\(\\s*(?:(?&b))?\\s*\\)))\\s*(?:(?<z>(?:\\[\\s*(?:(?&h))\\s*\\])\\s*(?:(?&z))?))?)\\s*(?://?\\s*(?<w>(?<aa>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?&l)\\s*:\\s*\\*\\s*|\\s*(?&d))\\s*|\\s*(?&c)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&ad)\\s*\\))\\s*(?:(?&z))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&aa)\\s*//?)*\\s*(?&aa))\\s*//?\\s*(?&aa)))?\\s*|\\s*(?:(?&w)\\s*|\\s*(?://?\\s*(?&w)?\\s*|\\s*(?://\\s*(?&w)))))\\s*(?:\\|\\s*(?&t))?)\\s*|\\s*-\\s*(?&r))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&r))?)\\s*(?:[-+]\\s*(?&q))?)\\s*(?:[<>]=?\\s*(?&p))?)\\s*(?:!?=\\s*(?&o))?)\\s*(?:and\\s*(?&m))?)\\s*(?:or\\s*(?&m))?)))\\s*(?:,\\s*(?:(?&b)))?)))?\\s*\\))\\s*$)',
		'FunctionName' => '(^\\s*(?:(?!(?<NodeType1>(?:comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)))(?<QName2>(?:(?:(?:(?<g>[-\\w]+))\\s*:\\s*(?<f>(?&g)))\\s*|\\s*(?:(?&f)))))\\s*$)',
		'Literal' => '(^\\s*(?:"[^"]*"\\s*|\\s*\'[^\']*\')\\s*$)',
		'LocalPart' => '(^\\s*(?:(?<NCName1>(?:[-\\w]+)))\\s*$)',
		'LocationPath' => '(^\\s*(?:(?<RelativeLocationPath1>(?<a>(?<c>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<o>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?<p>(?:(?:(?&o))\\s*:\\s*(?<v>(?&o)))\\s*|\\s*(?:(?&v))))\\s*|\\s*(?<l>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?<m>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*\\))\\s*(?:(?<g>(?:\\[\\s*(?:(?<t>(?:(?<x>(?:(?<z>(?<aa>(?<ab>(?<ac>(?<ae>(?:(?:(?:(?:\\$\\s*(?&p))\\s*|\\s*\\(\\s*(?&t)\\s*\\)\\s*|\\s*(?&m)\\s*|\\s*(?:(?<am>[0-9]+)\\s*(?:\\.\\s*(?&am)?)?\\s*|\\s*\\.\\s*(?&am))\\s*|\\s*(?:(?:(?!(?&l))(?&p))\\s*\\(\\s*(?:(?<ao>(?:(?&t))\\s*(?:,\\s*(?:(?&ao)))?))?\\s*\\)))\\s*(?:(?&g))?)\\s*(?://?\\s*(?&a))?\\s*|\\s*(?:(?&a)\\s*|\\s*(?&b)))\\s*(?:\\|\\s*(?&ae))?)\\s*|\\s*-\\s*(?&ac))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&ac))?)\\s*(?:[-+]\\s*(?&ab))?)\\s*(?:[<>]=?\\s*(?&aa))?)\\s*(?:!?=\\s*(?&z))?)\\s*(?:and\\s*(?&x))?)\\s*(?:or\\s*(?&x))?)))\\s*\\])\\s*(?:(?&g))?))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&c)\\s*//?)*\\s*(?&c))\\s*//?\\s*(?&c)))\\s*|\\s*(?<AbsoluteLocationPath2>(?<b>//?\\s*(?&a)?\\s*|\\s*(?://\\s*(?&a)))))\\s*$)',
		'MultiplicativeExpr' => '(^\\s*(?:(?<UnaryExpr1>(?<a>(?<c>(?:(?:(?:(?:\\$\\s*(?<v>(?:(?:(?&aj))\\s*:\\s*(?<al>(?&aj)))\\s*|\\s*(?:(?&al))))\\s*|\\s*\\(\\s*(?<m>(?:(?<ah>(?:(?<an>(?<ao>(?<ap>(?&a)\\s*(?:(?:(?&b)|div|mod)\\s*(?&a))?)\\s*(?:[-+]\\s*(?&ap))?)\\s*(?:[<>]=?\\s*(?&ao))?)\\s*(?:!?=\\s*(?&an))?)\\s*(?:and\\s*(?&ah))?)\\s*(?:or\\s*(?&ah))?))\\s*\\)\\s*|\\s*(?<n>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<x>[0-9]+)\\s*(?:\\.\\s*(?&x)?)?\\s*|\\s*\\.\\s*(?&x))\\s*|\\s*(?:(?:(?!(?&ae))(?&v))\\s*\\(\\s*(?:(?<z>(?:(?&m))\\s*(?:,\\s*(?:(?&z)))?))?\\s*\\)))\\s*(?:(?<i>(?:\\[\\s*(?:(?&m))\\s*\\])\\s*(?:(?&i))?))?)\\s*(?://?\\s*(?<f>(?<j>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<aj>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&v))\\s*|\\s*(?<ae>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&n)\\s*\\))\\s*(?:(?&i))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&j)\\s*//?)*\\s*(?&j))\\s*//?\\s*(?&j)))?\\s*|\\s*(?:(?&f)\\s*|\\s*(?://?\\s*(?&f)?\\s*|\\s*(?://\\s*(?&f)))))\\s*(?:\\|\\s*(?&c))?)\\s*|\\s*-\\s*(?&a)))\\s*(?:(?:(?<MultiplyOperator2>(?<b>\\*))|div|mod)\\s*(?<UnaryExpr3>(?&a)))?)\\s*$)',
		'MultiplyOperator' => '(^\\s*(?:\\*)\\s*$)',
		'NCName' => '(^\\s*(?:[-\\w]+)\\s*$)',
		'NameTest' => '(^\\s*(?:\\*\\s*|\\s*(?<NCName1>(?<a>[-\\w]+))\\s*:\\s*\\*\\s*|\\s*(?<QName2>(?:(?:(?:(?&a))\\s*:\\s*(?<f>(?&a)))\\s*|\\s*(?:(?&f)))))\\s*$)',
		'NodeTest' => '(^\\s*(?:(?<NameTest1>(?:\\*\\s*|\\s*(?<d>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?:(?:(?:(?&d))\\s*:\\s*(?<i>(?&d)))\\s*|\\s*(?:(?&i)))))\\s*|\\s*(?<NodeType2>(?:comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node))\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?<Literal3>(?:"[^"]*"\\s*|\\s*\'[^\']*\'))\\s*\\))\\s*$)',
		'NodeType' => '(^\\s*(?:comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*$)',
		'Number' => '(^\\s*(?:(?<Digits1>(?<a>[0-9]+))\\s*(?:\\.\\s*(?<Digits2>(?&a))?)?\\s*|\\s*\\.\\s*(?<Digits3>(?&a)))\\s*$)',
		'Operator' => '(^\\s*(?:(?<OperatorName1>(?:and\\s*|\\s*or\\s*|\\s*mod\\s*|\\s*div))\\s*|\\s*(?<MultiplyOperator2>(?:\\*))\\s*|\\s*//?\\s*|\\s*\\|\\s*|\\s*\\+\\s*|\\s*-\\s*|\\s*=\\s*|\\s*!=\\s*|\\s*<=?\\s*|\\s*>=?)\\s*$)',
		'OperatorName' => '(^\\s*(?:and\\s*|\\s*or\\s*|\\s*mod\\s*|\\s*div)\\s*$)',
		'OrExpr' => '(^\\s*(?:(?<AndExpr1>(?<a>(?:(?<c>(?<d>(?<e>(?<f>(?<h>(?:(?:(?:(?:\\$\\s*(?<aa>(?:(?:(?&an))\\s*:\\s*(?<ap>(?&an)))\\s*|\\s*(?:(?&ap))))\\s*|\\s*\\(\\s*(?<r>(?:(?&a)\\s*(?:or\\s*(?&a))?))\\s*\\)\\s*|\\s*(?<s>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<ac>[0-9]+)\\s*(?:\\.\\s*(?&ac)?)?\\s*|\\s*\\.\\s*(?&ac))\\s*|\\s*(?:(?:(?!(?&aj))(?&aa))\\s*\\(\\s*(?:(?<ae>(?:(?&r))\\s*(?:,\\s*(?:(?&ae)))?))?\\s*\\)))\\s*(?:(?<n>(?:\\[\\s*(?:(?&r))\\s*\\])\\s*(?:(?&n))?))?)\\s*(?://?\\s*(?<k>(?<o>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<an>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&aa))\\s*|\\s*(?<aj>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&s)\\s*\\))\\s*(?:(?&n))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&o)\\s*//?)*\\s*(?&o))\\s*//?\\s*(?&o)))?\\s*|\\s*(?:(?&k)\\s*|\\s*(?://?\\s*(?&k)?\\s*|\\s*(?://\\s*(?&k)))))\\s*(?:\\|\\s*(?&h))?)\\s*|\\s*-\\s*(?&f))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&f))?)\\s*(?:[-+]\\s*(?&e))?)\\s*(?:[<>]=?\\s*(?&d))?)\\s*(?:!?=\\s*(?&c))?)\\s*(?:and\\s*(?&a))?))\\s*(?:or\\s*(?<AndExpr2>(?&a)))?)\\s*$)',
		'PathExpr' => '(^\\s*(?:(?<FilterExpr1>(?<a>(?:(?:\\$\\s*(?<r>(?:(?:(?&af))\\s*:\\s*(?<ah>(?&af)))\\s*|\\s*(?:(?&ah))))\\s*|\\s*\\(\\s*(?<i>(?:(?<ad>(?:(?<aj>(?<ak>(?<al>(?<am>(?<ao>(?:(?&a)\\s*(?://?\\s*(?&b))?\\s*|\\s*(?&c))\\s*(?:\\|\\s*(?&ao))?)\\s*|\\s*-\\s*(?&am))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&am))?)\\s*(?:[-+]\\s*(?&al))?)\\s*(?:[<>]=?\\s*(?&ak))?)\\s*(?:!?=\\s*(?&aj))?)\\s*(?:and\\s*(?&ad))?)\\s*(?:or\\s*(?&ad))?))\\s*\\)\\s*|\\s*(?<j>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<t>[0-9]+)\\s*(?:\\.\\s*(?&t)?)?\\s*|\\s*\\.\\s*(?&t))\\s*|\\s*(?:(?:(?!(?&aa))(?&r))\\s*\\(\\s*(?:(?<v>(?:(?&i))\\s*(?:,\\s*(?:(?&v)))?))?\\s*\\)))\\s*(?:(?<e>(?:\\[\\s*(?:(?&i))\\s*\\])\\s*(?:(?&e))?))?))\\s*(?://?\\s*(?<RelativeLocationPath2>(?<b>(?<f>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<af>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&r))\\s*|\\s*(?<aa>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&j)\\s*\\))\\s*(?:(?&e))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&f)\\s*//?)*\\s*(?&f))\\s*//?\\s*(?&f))))?\\s*|\\s*(?<LocationPath3>(?<c>(?&b)\\s*|\\s*(?://?\\s*(?&b)?\\s*|\\s*(?://\\s*(?&b))))))\\s*$)',
		'Predicate' => '(^\\s*(?:\\[\\s*(?<PredicateExpr1>(?<a>(?<b>(?:(?<d>(?:(?<f>(?<g>(?<h>(?<i>(?<k>(?:(?:(?:(?:\\$\\s*(?<ac>(?:(?:(?&an))\\s*:\\s*(?<ap>(?&an)))\\s*|\\s*(?:(?&ap))))\\s*|\\s*\\(\\s*(?&b)\\s*\\)\\s*|\\s*(?<u>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<ad>[0-9]+)\\s*(?:\\.\\s*(?&ad)?)?\\s*|\\s*\\.\\s*(?&ad))\\s*|\\s*(?:(?:(?!(?&aj))(?&ac))\\s*\\(\\s*(?:(?<af>(?:(?&b))\\s*(?:,\\s*(?:(?&af)))?))?\\s*\\)))\\s*(?:(?<q>(?:\\[\\s*(?&a)\\s*\\])\\s*(?:(?&q))?))?)\\s*(?://?\\s*(?<n>(?<r>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<an>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&ac))\\s*|\\s*(?<aj>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&u)\\s*\\))\\s*(?:(?&q))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&r)\\s*//?)*\\s*(?&r))\\s*//?\\s*(?&r)))?\\s*|\\s*(?:(?&n)\\s*|\\s*(?://?\\s*(?&n)?\\s*|\\s*(?://\\s*(?&n)))))\\s*(?:\\|\\s*(?&k))?)\\s*|\\s*-\\s*(?&i))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&i))?)\\s*(?:[-+]\\s*(?&h))?)\\s*(?:[<>]=?\\s*(?&g))?)\\s*(?:!?=\\s*(?&f))?)\\s*(?:and\\s*(?&d))?)\\s*(?:or\\s*(?&d))?))))\\s*\\])\\s*$)',
		'PredicateExpr' => '(^\\s*(?:(?<Expr1>(?<a>(?:(?<c>(?:(?<e>(?<f>(?<g>(?<h>(?<j>(?:(?:(?:(?:\\$\\s*(?<ab>(?:(?:(?&an))\\s*:\\s*(?<ap>(?&an)))\\s*|\\s*(?:(?&ap))))\\s*|\\s*\\(\\s*(?&a)\\s*\\)\\s*|\\s*(?<t>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<ac>[0-9]+)\\s*(?:\\.\\s*(?&ac)?)?\\s*|\\s*\\.\\s*(?&ac))\\s*|\\s*(?:(?:(?!(?&aj))(?&ab))\\s*\\(\\s*(?:(?<ae>(?:(?&a))\\s*(?:,\\s*(?:(?&ae)))?))?\\s*\\)))\\s*(?:(?<p>(?:\\[\\s*(?:(?&a))\\s*\\])\\s*(?:(?&p))?))?)\\s*(?://?\\s*(?<m>(?<q>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<an>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&ab))\\s*|\\s*(?<aj>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&t)\\s*\\))\\s*(?:(?&p))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&q)\\s*//?)*\\s*(?&q))\\s*//?\\s*(?&q)))?\\s*|\\s*(?:(?&m)\\s*|\\s*(?://?\\s*(?&m)?\\s*|\\s*(?://\\s*(?&m)))))\\s*(?:\\|\\s*(?&j))?)\\s*|\\s*-\\s*(?&h))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&h))?)\\s*(?:[-+]\\s*(?&g))?)\\s*(?:[<>]=?\\s*(?&f))?)\\s*(?:!?=\\s*(?&e))?)\\s*(?:and\\s*(?&c))?)\\s*(?:or\\s*(?&c))?))))\\s*$)',
		'Prefix' => '(^\\s*(?:(?<NCName1>(?:[-\\w]+)))\\s*$)',
		'PrefixedName' => '(^\\s*(?:(?<Prefix1>(?:(?<c>[-\\w]+)))\\s*:\\s*(?<LocalPart2>(?:(?&c))))\\s*$)',
		'PrimaryExpr' => '(^\\s*(?:(?<VariableReference1>(?<a>\\$\\s*(?<f>(?:(?:(?<s>[-\\w]+))\\s*:\\s*(?<q>(?&s)))\\s*|\\s*(?:(?&q)))))\\s*|\\s*\\(\\s*(?<Expr2>(?<b>(?:(?<m>(?:(?<t>(?<u>(?<v>(?<w>(?<y>(?:(?:(?:(?&a)\\s*|\\s*\\(\\s*(?&b)\\s*\\)\\s*|\\s*(?&c)\\s*|\\s*(?&d)\\s*|\\s*(?&e))\\s*(?:(?<ae>(?:\\[\\s*(?:(?&b))\\s*\\])\\s*(?:(?&ae))?))?)\\s*(?://?\\s*(?<ab>(?<af>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?&s)\\s*:\\s*\\*\\s*|\\s*(?&f))\\s*|\\s*(?&n)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&c)\\s*\\))\\s*(?:(?&ae))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&af)\\s*//?)*\\s*(?&af))\\s*//?\\s*(?&af)))?\\s*|\\s*(?:(?&ab)\\s*|\\s*(?://?\\s*(?&ab)?\\s*|\\s*(?://\\s*(?&ab)))))\\s*(?:\\|\\s*(?&y))?)\\s*|\\s*-\\s*(?&w))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&w))?)\\s*(?:[-+]\\s*(?&v))?)\\s*(?:[<>]=?\\s*(?&u))?)\\s*(?:!?=\\s*(?&t))?)\\s*(?:and\\s*(?&m))?)\\s*(?:or\\s*(?&m))?)))\\s*\\)\\s*|\\s*(?<Literal3>(?<c>"[^"]*"\\s*|\\s*\'[^\']*\'))\\s*|\\s*(?<Number4>(?<d>(?<h>[0-9]+)\\s*(?:\\.\\s*(?&h)?)?\\s*|\\s*\\.\\s*(?&h)))\\s*|\\s*(?<FunctionCall5>(?<e>(?:(?!(?<n>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node))(?&f))\\s*\\(\\s*(?:(?<j>(?:(?&b))\\s*(?:,\\s*(?:(?&j)))?))?\\s*\\))))\\s*$)',
		'QName' => '(^\\s*(?:(?<PrefixedName1>(?:(?:(?<e>[-\\w]+))\\s*:\\s*(?<d>(?&e))))\\s*|\\s*(?<UnprefixedName2>(?:(?&d))))\\s*$)',
		'RelationalExpr' => '(^\\s*(?:(?<AdditiveExpr1>(?<a>(?<b>(?<c>(?<e>(?:(?:(?:(?:\\$\\s*(?<x>(?:(?:(?&al))\\s*:\\s*(?<an>(?&al)))\\s*|\\s*(?:(?&an))))\\s*|\\s*\\(\\s*(?<o>(?:(?<aj>(?:(?<ap>(?&a)\\s*(?:[<>]=?\\s*(?&a))?)\\s*(?:!?=\\s*(?&ap))?)\\s*(?:and\\s*(?&aj))?)\\s*(?:or\\s*(?&aj))?))\\s*\\)\\s*|\\s*(?<p>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<z>[0-9]+)\\s*(?:\\.\\s*(?&z)?)?\\s*|\\s*\\.\\s*(?&z))\\s*|\\s*(?:(?:(?!(?&ag))(?&x))\\s*\\(\\s*(?:(?<ab>(?:(?&o))\\s*(?:,\\s*(?:(?&ab)))?))?\\s*\\)))\\s*(?:(?<k>(?:\\[\\s*(?:(?&o))\\s*\\])\\s*(?:(?&k))?))?)\\s*(?://?\\s*(?<h>(?<l>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<al>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&x))\\s*|\\s*(?<ag>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&p)\\s*\\))\\s*(?:(?&k))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&l)\\s*//?)*\\s*(?&l))\\s*//?\\s*(?&l)))?\\s*|\\s*(?:(?&h)\\s*|\\s*(?://?\\s*(?&h)?\\s*|\\s*(?://\\s*(?&h)))))\\s*(?:\\|\\s*(?&e))?)\\s*|\\s*-\\s*(?&c))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&c))?)\\s*(?:[-+]\\s*(?&b))?))\\s*(?:[<>]=?\\s*(?<AdditiveExpr2>(?&a)))?)\\s*$)',
		'RelativeLocationPath' => '(^\\s*(?:(?<Step1>(?<a>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<l>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?<m>(?:(?:(?&l))\\s*:\\s*(?<s>(?&l)))\\s*|\\s*(?:(?&s))))\\s*|\\s*(?<i>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?<j>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*\\))\\s*(?:(?<d>(?:\\[\\s*(?:(?<q>(?:(?<u>(?:(?<w>(?<x>(?<y>(?<z>(?<ab>(?:(?:(?:(?:\\$\\s*(?&m))\\s*|\\s*\\(\\s*(?&q)\\s*\\)\\s*|\\s*(?&j)\\s*|\\s*(?:(?<am>[0-9]+)\\s*(?:\\.\\s*(?&am)?)?\\s*|\\s*\\.\\s*(?&am))\\s*|\\s*(?:(?:(?!(?&i))(?&m))\\s*\\(\\s*(?:(?<ao>(?:(?&q))\\s*(?:,\\s*(?:(?&ao)))?))?\\s*\\)))\\s*(?:(?&d))?)\\s*(?://?\\s*(?<ae>(?&a)\\s*|\\s*(?:(?:(?&a)\\s*//?)*\\s*(?&a))\\s*//?\\s*(?&a)))?\\s*|\\s*(?:(?&ae)\\s*|\\s*(?://?\\s*(?&ae)?\\s*|\\s*(?://\\s*(?&ae)))))\\s*(?:\\|\\s*(?&ab))?)\\s*|\\s*-\\s*(?&z))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&z))?)\\s*(?:[-+]\\s*(?&y))?)\\s*(?:[<>]=?\\s*(?&x))?)\\s*(?:!?=\\s*(?&w))?)\\s*(?:and\\s*(?&u))?)\\s*(?:or\\s*(?&u))?)))\\s*\\])\\s*(?:(?&d))?))?\\s*|\\s*(?:\\.\\.?)))\\s*|\\s*(?<RelativeLocationPath0>(?:(?<Step2>(?&a))\\s*//?)*\\s*(?<Step3>(?&a)))\\s*//?\\s*(?<Step4>(?&a)))\\s*$)',
		'Step' => '(^\\s*(?:(?<AxisSpecifier1>(?<a>(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?)))\\s*(?<NodeTest2>(?<b>(?:\\*\\s*|\\s*(?<k>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?<l>(?:(?:(?&k))\\s*:\\s*(?<r>(?&k)))\\s*|\\s*(?:(?&r))))\\s*|\\s*(?<h>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?<i>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*\\)))\\s*(?<predicates0>(?<predicates3>(?<c>(?:\\[\\s*(?:(?<p>(?:(?<t>(?:(?<v>(?<w>(?<x>(?<y>(?<aa>(?:(?:(?:(?:\\$\\s*(?&l))\\s*|\\s*\\(\\s*(?&p)\\s*\\)\\s*|\\s*(?&i)\\s*|\\s*(?:(?<am>[0-9]+)\\s*(?:\\.\\s*(?&am)?)?\\s*|\\s*\\.\\s*(?&am))\\s*|\\s*(?:(?:(?!(?&h))(?&l))\\s*\\(\\s*(?:(?<ao>(?:(?&p))\\s*(?:,\\s*(?:(?&ao)))?))?\\s*\\)))\\s*(?:(?&c))?)\\s*(?://?\\s*(?<ad>(?<ag>(?&a)\\s*(?&b)\\s*(?:(?&c))?\\s*|\\s*(?&d))\\s*|\\s*(?:(?:(?&ag)\\s*//?)*\\s*(?&ag))\\s*//?\\s*(?&ag)))?\\s*|\\s*(?:(?&ad)\\s*|\\s*(?://?\\s*(?&ad)?\\s*|\\s*(?://\\s*(?&ad)))))\\s*(?:\\|\\s*(?&aa))?)\\s*|\\s*-\\s*(?&y))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&y))?)\\s*(?:[-+]\\s*(?&x))?)\\s*(?:[<>]=?\\s*(?&w))?)\\s*(?:!?=\\s*(?&v))?)\\s*(?:and\\s*(?&t))?)\\s*(?:or\\s*(?&t))?)))\\s*\\])\\s*(?:(?&c))?)))?\\s*|\\s*(?<AbbreviatedStep4>(?<d>\\.\\.?)))\\s*$)',
		'UnaryExpr' => '(^\\s*(?:(?<UnionExpr1>(?<a>(?:(?:(?:(?:\\$\\s*(?<u>(?:(?:(?&ai))\\s*:\\s*(?<ak>(?&ai)))\\s*|\\s*(?:(?&ak))))\\s*|\\s*\\(\\s*(?<l>(?:(?<ag>(?:(?<am>(?<an>(?<ao>(?&b)\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&b))?)\\s*(?:[-+]\\s*(?&ao))?)\\s*(?:[<>]=?\\s*(?&an))?)\\s*(?:!?=\\s*(?&am))?)\\s*(?:and\\s*(?&ag))?)\\s*(?:or\\s*(?&ag))?))\\s*\\)\\s*|\\s*(?<m>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<w>[0-9]+)\\s*(?:\\.\\s*(?&w)?)?\\s*|\\s*\\.\\s*(?&w))\\s*|\\s*(?:(?:(?!(?&ad))(?&u))\\s*\\(\\s*(?:(?<y>(?:(?&l))\\s*(?:,\\s*(?:(?&y)))?))?\\s*\\)))\\s*(?:(?<h>(?:\\[\\s*(?:(?&l))\\s*\\])\\s*(?:(?&h))?))?)\\s*(?://?\\s*(?<e>(?<i>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<ai>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&u))\\s*|\\s*(?<ad>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&m)\\s*\\))\\s*(?:(?&h))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&i)\\s*//?)*\\s*(?&i))\\s*//?\\s*(?&i)))?\\s*|\\s*(?:(?&e)\\s*|\\s*(?://?\\s*(?&e)?\\s*|\\s*(?://\\s*(?&e)))))\\s*(?:\\|\\s*(?&a))?))\\s*|\\s*-\\s*(?<UnaryExpr2>(?<b>(?&a)\\s*|\\s*-\\s*(?&b))))\\s*$)',
		'UnionExpr' => '(^\\s*(?:(?<PathExpr1>(?<a>(?:(?:(?:\\$\\s*(?<t>(?:(?:(?&ah))\\s*:\\s*(?<aj>(?&ah)))\\s*|\\s*(?:(?&aj))))\\s*|\\s*\\(\\s*(?<k>(?:(?<af>(?:(?<al>(?<am>(?<an>(?<ao>(?&b)\\s*|\\s*-\\s*(?&ao))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&ao))?)\\s*(?:[-+]\\s*(?&an))?)\\s*(?:[<>]=?\\s*(?&am))?)\\s*(?:!?=\\s*(?&al))?)\\s*(?:and\\s*(?&af))?)\\s*(?:or\\s*(?&af))?))\\s*\\)\\s*|\\s*(?<l>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<v>[0-9]+)\\s*(?:\\.\\s*(?&v)?)?\\s*|\\s*\\.\\s*(?&v))\\s*|\\s*(?:(?:(?!(?&ac))(?&t))\\s*\\(\\s*(?:(?<x>(?:(?&k))\\s*(?:,\\s*(?:(?&x)))?))?\\s*\\)))\\s*(?:(?<g>(?:\\[\\s*(?:(?&k))\\s*\\])\\s*(?:(?&g))?))?)\\s*(?://?\\s*(?<d>(?<h>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<ah>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&t))\\s*|\\s*(?<ac>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&l)\\s*\\))\\s*(?:(?&g))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&h)\\s*//?)*\\s*(?&h))\\s*//?\\s*(?&h)))?\\s*|\\s*(?:(?&d)\\s*|\\s*(?://?\\s*(?&d)?\\s*|\\s*(?://\\s*(?&d))))))\\s*(?:\\|\\s*(?<UnionExpr2>(?<b>(?&a)\\s*(?:\\|\\s*(?&b))?)))?)\\s*$)',
		'UnprefixedName' => '(^\\s*(?:(?<LocalPart1>(?:(?:[-\\w]+))))\\s*$)',
		'VariableReference' => '(^\\s*(?:\\$\\s*(?<QName1>(?:(?:(?:(?<f>[-\\w]+))\\s*:\\s*(?<e>(?&f)))\\s*|\\s*(?:(?&e)))))\\s*$)',
		'arguments' => '(^\\s*(?:(?<Argument1>(?<a>(?<c>(?:(?<e>(?:(?<g>(?<h>(?<i>(?<j>(?<l>(?:(?:(?:(?:\\$\\s*(?<ad>(?:(?:(?&an))\\s*:\\s*(?<ap>(?&an)))\\s*|\\s*(?:(?&ap))))\\s*|\\s*\\(\\s*(?&c)\\s*\\)\\s*|\\s*(?<v>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<ae>[0-9]+)\\s*(?:\\.\\s*(?&ae)?)?\\s*|\\s*\\.\\s*(?&ae))\\s*|\\s*(?:(?:(?!(?&ak))(?&ad))\\s*\\(\\s*(?:(?&b))?\\s*\\)))\\s*(?:(?<r>(?:\\[\\s*(?:(?&c))\\s*\\])\\s*(?:(?&r))?))?)\\s*(?://?\\s*(?<o>(?<s>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<an>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&ad))\\s*|\\s*(?<ak>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&v)\\s*\\))\\s*(?:(?&r))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&s)\\s*//?)*\\s*(?&s))\\s*//?\\s*(?&s)))?\\s*|\\s*(?:(?&o)\\s*|\\s*(?://?\\s*(?&o)?\\s*|\\s*(?://\\s*(?&o)))))\\s*(?:\\|\\s*(?&l))?)\\s*|\\s*-\\s*(?&j))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&j))?)\\s*(?:[-+]\\s*(?&i))?)\\s*(?:[<>]=?\\s*(?&h))?)\\s*(?:!?=\\s*(?&g))?)\\s*(?:and\\s*(?&e))?)\\s*(?:or\\s*(?&e))?))))\\s*(?:,\\s*(?<arguments0>(?<arguments2>(?<b>(?&a)\\s*(?:,\\s*(?:(?&b)))?))))?)\\s*$)',
		'predicates' => '(^\\s*(?:(?<Predicate1>(?<a>\\[\\s*(?:(?<d>(?:(?<f>(?:(?<h>(?<i>(?<j>(?<k>(?<m>(?:(?:(?:(?:\\$\\s*(?<ac>(?:(?:(?&an))\\s*:\\s*(?<ap>(?&an)))\\s*|\\s*(?:(?&ap))))\\s*|\\s*\\(\\s*(?&d)\\s*\\)\\s*|\\s*(?<v>"[^"]*"\\s*|\\s*\'[^\']*\')\\s*|\\s*(?:(?<ad>[0-9]+)\\s*(?:\\.\\s*(?&ad)?)?\\s*|\\s*\\.\\s*(?&ad))\\s*|\\s*(?:(?:(?!(?&aj))(?&ac))\\s*\\(\\s*(?:(?<af>(?:(?&d))\\s*(?:,\\s*(?:(?&af)))?))?\\s*\\)))\\s*(?:(?&b))?)\\s*(?://?\\s*(?<p>(?<s>(?:(?:ancestor\\s*|\\s*ancestor-or-self\\s*|\\s*attribute\\s*|\\s*child\\s*|\\s*descendant\\s*|\\s*descendant-or-self\\s*|\\s*following\\s*|\\s*following-sibling\\s*|\\s*namespace\\s*|\\s*parent\\s*|\\s*preceding\\s*|\\s*preceding-sibling\\s*|\\s*self)\\s*::\\s*|\\s*(?:@?))\\s*(?:(?:\\*\\s*|\\s*(?<an>[-\\w]+)\\s*:\\s*\\*\\s*|\\s*(?&ac))\\s*|\\s*(?<aj>comment\\s*|\\s*text\\s*|\\s*processing-instruction\\s*|\\s*node)\\s*\\(\\s*\\)\\s*|\\s*processing-instruction\\s*\\(\\s*(?&v)\\s*\\))\\s*(?:(?&b))?\\s*|\\s*(?:\\.\\.?))\\s*|\\s*(?:(?:(?&s)\\s*//?)*\\s*(?&s))\\s*//?\\s*(?&s)))?\\s*|\\s*(?:(?&p)\\s*|\\s*(?://?\\s*(?&p)?\\s*|\\s*(?://\\s*(?&p)))))\\s*(?:\\|\\s*(?&m))?)\\s*|\\s*-\\s*(?&k))\\s*(?:(?:(?:\\*)|div|mod)\\s*(?&k))?)\\s*(?:[-+]\\s*(?&j))?)\\s*(?:[<>]=?\\s*(?&i))?)\\s*(?:!?=\\s*(?&h))?)\\s*(?:and\\s*(?&f))?)\\s*(?:or\\s*(?&f))?)))\\s*\\]))\\s*(?<predicates0>(?<predicates2>(?<b>(?&a)\\s*(?:(?&b))?)))?)\\s*$)'
	];
}