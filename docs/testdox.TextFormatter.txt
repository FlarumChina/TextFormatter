s9e\Toolkit\Tests\TextFormatter\Autoloaders
 [x] ConfigBuilder loads core plugins files
 [x] ConfigBuilder can autoload Parser
 [x] ConfigBuilder does not include Parser twice
 [x] ConfigBuilder can autoload Renderer
 [x] ConfigBuilder does not include Renderer twice
 [x] BBCodesConfig addPredefinedBBCode autoloads PredefinedBBCodes

s9e\Toolkit\Tests\TextFormatter\ConfigBuilder
 [x] Can load plugins
 [x] Loaded plugins are available as a public property
 [x] Can unload plugins by unsetting them
 [x] Loads plugin on magic get
 [x] Has a magic property predefinedTags that loads and creates an instance of PredefinedTags
 [x] Throws an exception on unsupported magic get
 [x] loadPlugin throws an exception on invalid plugin name
 [x] loadPlugin throws an exception on unknown plugin
 [x] Can create tag
 [x] Can create tag with option
 [x] Can tell if tag exists
 [x] Can remove tag
 [x] Can create attribute
 [x] Can tell if attribute exists
 [x] Can remove attribute if it exists
 [x] Throws an exception if removeAttribute is called for an attribute that does not exist
 [x] Cannot create attribute on non existing tag
 [x] Can get tag attribute options
 [x] Can get tag attribute option
 [x] Can set tag attribute option
 [x] Invalid tag names are rejected
 [x] Invalid attribute names are rejected
 [x] Duplicate tag names are rejected
 [x] Duplicate attribute names are rejected
 [x] Different tags can have attributes of the same name
 [x] Can create tag with attributes
 [x] Can create rule
 [x] Cannot create rule on non existent tag
 [x] Cannot create unknown rule
 [x] Can create multiple requireParent rules on different targets
 [x] Can create rule that targets a non existent tag
 [x] Can remove rule
 [x] Can create tag with rules
 [x] Can set unknown tag option
 [x] Default options are set on new tags
 [x] Tag options php type is preserved
 [x] getTagOptions fails on unknown tags
 [x] getTagOption fails on unknown tags
 [x] getTagOption fails on unset options
 [x] getTagOption can return a null option
 [x] Can set tag template
 [x] Can set tag xsl
 [x] Cannot set tag template on unknown tag
 [x] Cannot set tag template with invalid xsl
 [x] Cannot get tag xsl on unknown tag
 [x] Cannot get tag xsl on tag without xsl
 [x] Can create tag with template
 [x] Can create tag with xsl
 [x] Can set tag xsl with preserved whitespace
 [x] Cannot set tag template with variable in script src
 [x] Can set tag template with variable in script src with insecure flag
 [x] Cannot set tag template with variable in script content
 [x] Can set tag template with variable in script content with insecure flag
 [x] Cannot set tag template with disable output escaping
 [x] Can set tag template with disable output escaping with insecure flag
 [x] Can set custom filter
 [x] Can set custom filter with extra config
 [x] setFilter throws an exception on invalid callback
 [x] HTTP and HTTPS schemes are allowed by default
 [x] Url filter allows default schemes
 [x] Url filter can be configured to allow additional schemes
 [x] Url filter can be configured to disallow hosts
 [x] Optimizes regexp by merging heads
 [x] Optimizes regexp by using character classes
 [x] Optimizes regexp by using quantifier
 [x] Optimizes regexp that uses wildcards
 [x] Optimizes regexp that uses parentheses
 [x] Optimizes regexp by using lookahead assertion
 [x] Optimizes regexp by using lookahead assertion with escaped characters
 [x] Does not optimize regexp by using lookahead assertion with special sequences
 [x] getParserConfig flattens allow and deny rules into the allow array
 [x] getParserConfig removes rules that target non existing tags
 [x] getParserConfig preserves requireParent rules that target non existing tags
 [x] getParserConfig preserves requireAscendant rules that target non existing tags
 [x] getPluginsConfig adds default config if missing
 [x] Plugins can be disabled by returning false instead of config
 [x] Can add generic xsl
 [x] Cannot add invalid xsl
 [x] Xsl from tags appears in output
 [x] Can add a preFilter callback to a tag
 [x] addTagPreFilterCallback throws an exception if callback is not callable
 [x] Can set preFilter callbacks via setTagOption
 [x] Can clear all preFilter callbacks from a tag
 [x] Can add a postFilter callback to a tag
 [x] addTagPostFilterCallback throws an exception if callback is not callable
 [x] Can set postFilter callbacks via setTagOption
 [x] Can clear all postFilter callbacks from a tag
 [x] Can add a preFilter callback to a tag attribute
 [x] addTagAttributePreFilterCallback throws an exception if callback is not callable
 [x] Can set preFilter callbacks via setTagAttributeOption
 [x] Can clear all preFilter callbacks from a tag attribute
 [x] Can add a postFilter callback to a tag attribute
 [x] addTagAttributePostFilterCallback throws an exception if callback is not callable
 [x] Can set postFilter callbacks via setTagAttributeOption
 [x] Can clear all postFilter callbacks from a tag attribute

s9e\Toolkit\Tests\TextFormatter\Parser
 [x] Int filter accepts whole numbers
 [x] Int filter rejects partial numbers
 [x] Int filter accepts integers
 [x] Int filter rejects numbers that start with a zero
 [x] Int filter rejects numbers in scientific notation
 [x] Int filter accepts negative numbers
 [x] Int filter rejects decimal numbers
 [x] Int filter rejects floats
 [x] Int filter rejects numbers too big for the php integer type
 [x] Int filter rejects numbers in hex notation
 [x] Integer filter accepts whole numbers
 [x] Integer filter rejects partial numbers
 [x] Integer filter accepts integers
 [x] Integer filter rejects numbers that start with a zero
 [x] Integer filter rejects numbers in scientific notation
 [x] Integer filter accepts negative numbers
 [x] Integer filter rejects decimal numbers
 [x] Integer filter rejects floats
 [x] Integer filter rejects numbers too big for the php integer type
 [x] Integer filter rejects numbers in hex notation
 [x] Uint filter accepts whole numbers
 [x] Uint filter rejects partial numbers
 [x] Uint filter accepts integers
 [x] Uint filter rejects numbers that start with a zero
 [x] Uint filter rejects numbers in scientific notation
 [x] Uint filter rejects negative numbers
 [x] Uint filter rejects decimal numbers
 [x] Uint filter rejects floats
 [x] Uint filter rejects numbers too big for the php integer type
 [x] Uint filter rejects numbers in hex notation
 [x] Number filter accepts whole numbers
 [x] Number filter rejects partial numbers
 [x] Number filter accepts integers
 [x] Number filter accepts numbers that start with a zero
 [x] Number filter rejects numbers in scientific notation
 [x] Number filter rejects negative numbers
 [x] Number filter rejects decimal numbers
 [x] Number filter rejects floats
 [x] Number filter accepts numbers too big for the php integer type
 [x] Number filter rejects numbers in hex notation
 [x] Float filter accepts whole numbers
 [x] Float filter rejects partial numbers
 [x] Float filter accepts integers
 [x] Float filter accepts numbers that start with a zero
 [x] Float filter accepts numbers in scientific notation
 [x] Float filter accepts negative numbers
 [x] Float filter accepts decimal numbers
 [x] Float filter accepts floats
 [x] Float filter accepts numbers too big for the php integer type
 [x] Float filter rejects numbers in hex notation
 [x] Invalid urls are rejected
 [x] Urls with no host are rejected
 [x] Urls with no path are accepted
 [x] Url filter rejects not allowed schemes
 [x] Url filter can accept non http schemes
 [x] Url filter rejects disallowed host
 [x] Url filter rejects disallowed host mask
 [x] Url filter rejects subdomains
 [x] Url filter rejects disallowed tld
 [x] Url filter does not reject host on partial match
 [x] Url filter rejects pseudo schemes
 [x] Id filter accepts numbers
 [x] Id filter accepts lowercase letters
 [x] Id filter accepts uppercase letters
 [x] Id filter accepts dashes
 [x] Id filter accepts underscores
 [x] Id filter rejects spaces
 [x] Identifier filter is an alias for the id filter
 [x] Color filter accepts rgb hex values
 [x] Color filter rejects invalid rgb hex values
 [x] Color filter accepts values made entirely of letters
 [x] Range filter allows integers within range
 [x] Range filter allows negative integers within range
 [x] Range filter rejects decimal numbers
 [x] Range filter adjusts values below range
 [x] Range filter adjusts values above range
 [x] Simpletext filter accepts letters numbers minus and plus signs dots commas underscores and spaces
 [x] Simpletext filter rejects everything else
 [x] Regexp filter accepts content that matches
 [x] Regexp filter rejects content that does not match
 [x] Regexp filter replaces content with the pattern found in replace if valid
 [x] Regexp filter does not replace content with the pattern found in replace if invalid
 [x] Regexp filter correctly handles backslashes in replace pattern
 [x] Email filter accepts valid emails
 [x] Email filter rejects invalid emails
 [x] Email filter can urlencode every character of a valid email if force urlencode is on
 [x] Email filter will not urlencode an invalid email even if force urlencode is on
 [x] Undefined filter rejects everything
 [x] Attribute name is added to log entries when available
 [x] Tag level preFilter callback receives an associative array of attributes which gets replaced by its return value
 [x] Tag level postFilter callback receives an associative array of attributes which gets replaced by its return value
 [x] Compound attributes are split if valid then removed
 [x] Compound attributes do not overwrite existing values
 [x] Compound attributes are removed if invalid
 [x] Compound attributes are optional by default
 [x] Invalid attributes use their default value if set
 [x] Missing attributes use their default value if set
 [x] Attribute value is replaced by the return value of the attribute preFilter callbacks
 [x] Attribute value is replaced by the return value of the attribute postFilter callbacks even if it makes it invalid
 [x] getTagsConfig returns the tags config
 [x] Plain text is returned within pt tags
 [x] Undefined attributes do not appear in XML
 [x] Overlapping tags are removed
 [x] Tags are sorted correctly
 [x] The number of regexp matches can be limited with extra matches ignored
 [x] The number of regexp matches can be limited with extra matches ignored and a warning
 [x] The number of regexp matches can be limited across multiple regexps with extra matches ignored
 [x] The number of regexp matches can be limited and parsing aborted if limit exceeded
 [x] Unknown tags are ignored
 [x] Tags nestingLimit is enforced
 [x] Tags nestingLimit does not incorrectly count siblings
 [x] Tags tagLimit is enforced
 [x] Zero width tags are correctly ouput
 [x] Tags left open get closed when their ancestor gets closed
 [x] Tags can specify a list of tags that are required
 [x] Tags can specify a list of tags that are required and be skipped if any required tag is absent
 [x] Fulfilled requireParent rule allows tag
 [x] requireParent rule with multiple targets is fulfilled if any of the targets is the parent
 [x] Fulfilled requireParent rule allows tag despite BBCode suffix
 [x] Unfulfilled requireParent rule blocks tag
 [x] Unfulfilled requireParent rule blocks tag despite ascendant
 [x] closeParent rule is applied to matching parent tag
 [x] closeParent rule is not applied to non matching parent tag
 [x] closeParent rule is not applied to ascendant tag
 [x] closeParent rule is applied to matching parent tag with identical suffix
 [x] closeParent rule is applied to matching parent tag with different suffix
 [x] closeAscendant rule is applied to parent tag
 [x] closeAscendant rule is applied to ascendant tag
 [x] closeAscendant rule is applied to tag with identical suffix
 [x] closeAscendant rule is applied to tag with different suffix
 [x] deny rule blocks tag
 [x] allow rule allows tag
 [x] requireAscendant rule is fulfilled by parent
 [x] requireAscendant rule is fulfilled by parent with suffix
 [x] requireAscendant rule is fulfilled by ascendant
 [x] requireAscendant rule is fulfilled by ascendant with suffix
 [x] requireAscendant rule with multiple targets is fulfilled if any of the targets is an ascendant
 [x] Unfulfilled requireAscendant rule blocks tag
 [x] Whitespace trimming works

s9e\Toolkit\Tests\TextFormatter\PluginConfig
 [x] Overrides properties with values passed in second parameter

s9e\Toolkit\Tests\TextFormatter\PluginParser
 [x] setUp is called once after initialization

s9e\Toolkit\Tests\TextFormatter\PredefinedBBCodes
 [x] Throws an exception if the BBCode does not exist
 [x] getUsedCodeStx returns all values of stx in CODE tags
 [x] Predefined BBCodes

s9e\Toolkit\Tests\TextFormatter\Renderer
 [x] Render multi

s9e\Toolkit\Tests\TextFormatter\Plugins\AutolinkConfig
 [x] Automatically creates an URL tag
 [x] Generates a regexp that matches all possible urls

s9e\Toolkit\Tests\TextFormatter\Plugins\AutolinkParser
 [x] HTTP urls are linkified by default
 [x] HTTPS urls are linkified by default
 [x] FTP urls are not linkified by default
 [x] FTP urls are linkified if the scheme has been allowed in configBuilder
 [x] Trailing dots are not linkified
 [x] Trailing punctuation is not linkified
 [x] Trailing slash is linkified
 [x] Trailing equal sign is linkified
 [x] Balanced right parentheses are linkified
 [x] Non balanced right parentheses are not linkified

s9e\Toolkit\Tests\TextFormatter\Plugins\BBCodesConfig
 [x] getConfig returns false if no BBCodes were added
 [x] A single asterisk is accepted as a BBCode name
 [x] An asterisk followed by anything is rejected as a BBCode name
 [x] BBCode names can start with a letter
 [x] BBCode names cannot start with anything else
 [x] BBCode names can only contain letters numbers and underscores
 [x] addBBCode rejects invalid BBCode names
 [x] BBCodes are mapped to a tag of the same name by default
 [x] addBBCode throws an exception if the BBCode name is already in use
 [x] A BBCode can map to a tag of a different name
 [x] addBBCodeAlias throws an exception if the tag does not exist
 [x] addBBCodeAlias throws an exception if the BBCode already exists
 [x] addBBCodeAlias cannot create an alias to an invalid tag name
 [x] Can tell whether a BBCode exists
 [x] Can return all options of a BBCode
 [x] Can return the value of an option of a BBCode
 [x] Can return the value of an option of a BBCode even if it is null
 [x] getBBCodeOptions throws an exception if the BBCode does not exist
 [x] getBBCodeOption throws an exception if the BBCode does not exist
 [x] getBBCodeOption throws an exception if the option does not exist
 [x] setBBCodeOption cannot set a defaultAttr with an invalid name
 [x] setBBCodeOption cannot set a contentAttr with an invalid name
 [x] addBBCodeFromExample works on simple BBCodes
 [x] addBBCodeFromExample throws an exception if the definition is malformed
 [x] addBBCodeFromExample throws an exception if the template is not wellformed XML
 [x] addBBCodeFromExample throws an exception if an undefined placeholder is found in an attribute
 [x] addBBCodeFromExample throws an exception if an undefined placeholder is found anywhere
 [x] addBBCodeFromExample throws an exception if a TEXT placeholder is found in an attribute
 [x] addBBCodeFromExample does not throw an exception if a TEXT placeholder is found in an attribute but ALLOW INSECURE TEMPLATES flag is set
 [x] addBBCodeFromExample allows a single start tag with no end tag and enables autoClose
 [x] addBBCodeFromExample allows a self closed tag and enables autoClose
 [x] addBBCodeFromExample handles default attribute and gives it the same name as the tag
 [x] addBBCodeFromExample handles single preFilter callback in attribute
 [x] addBBCodeFromExample handles multiple preFilter callbacks in attribute
 [x] addBBCodeFromExample rejects unauthorized preFilter callbacks in attribute
 [x] addBBCodeFromExample handles single postFilter callback in attribute
 [x] addBBCodeFromExample handles multiple postFilter callbacks in attribute
 [x] addBBCodeFromExample rejects unauthorized postFilter callbacks in attribute
 [x] Custom callbacks can be added via BBCodesConfig allowPhaseFiltersCallback
 [x] Static method callbacks can be added via BBCodesConfig allowPhaseFiltersCallback
 [x] addBBCodeFromExample does not create an attribute for the tag content if it is TEXT with no other options set
 [x] addBBCodeFromExample creates an attribute named content for the tag content
 [x] addBBCodeFromExample replaces placeholders in attributes
 [x] addBBCodeFromExample replaces placeholders in content
 [x] addBBCodeFromExample throws an exception on duplicate attributes
 [x] addBBCodeFromExample throws an exception on duplicate placeholders
 [x] addBBCodeFromExample throws an exception on undefined placeholders used in attributes
 [x] addBBCodeFromExample throws an exception on undefined placeholders used in content
 [x] addBBCodeFromExample allows arbitrary options in attribute
 [x] addBBCodeFromExample handles REGEXP placeholders
 [x] addBBCodeFromExample handles COMPOUND placeholders
 [x] addBBCodeFromExample handles RANGE placeholders
 [x] addBBCodeFromExample handles CHOICE placeholders and turns them into regexps
 [x] addBBCodeFromExample handles CHOICE placeholders with Unicode values

s9e\Toolkit\Tests\TextFormatter\Plugins\BBCodesParser
 [x] Simple BBcodes are parsed
 [x] BBCode names are case insensitive
 [x] BBCodes removed from the config are ignored
 [x] Overlapping tags are sorted out
 [x] BBCode tags can use a colon followed by digits as a suffix to control how start tags and end tags are paired
 [x] BBCode tags can be used as singletons like self closing XML tags
 [x] Whitespace inside BBCodes is ignored
 [x] Junk after the slash of a self closing BBCode tag generates a warning
 [x] Junk after the name of a closing bbcode tag generates a warning
 [x] A BBCode can map to a tag of a different name
 [x] An equal sign following the tag name defines the value of the default attribute
 [x] If no default attribute is specified the name of the BBCode is used as the name of the default attribute
 [x] A BBCode cannot end with an open attribute
 [x] An unterminated self closing BBCode at the end of the text is ignored
 [x] An unterminated BBCode with an attribute name that extends till the end of the text is ignored
 [x] Junk characters at the start of an attribute name are detected
 [x] Junk characters in an attribute name are detected
 [x] Attribute values can be enclosed within single quotes
 [x] Attribute values can be enclosed within double quotes
 [x] Attribute values within single quotes can contain spaces
 [x] Attribute values within double quotes can contain spaces
 [x] Attribute values within single quotes can contain single quotes each escaped with a backslash
 [x] Attribute values within double quotes can contain double quotes each escaped with a backslash
 [x] Attribute values within single quotes can contain unescaped double quotes
 [x] Attribute values within double quotes can contain unescaped single quotes
 [x] Attribute values within single quotes can contain backslashes each escaped with another backslash
 [x] Attribute values within double quotes can contain backslashes each escaped with another backslash
 [x] Attribute values within single quotes can contain newlines
 [x] Attribute values within double quotes can contain newlines
 [x] An attribute value not within quotes cannot contain spaces
 [x] An attribute value not within quotes cannot contain newlines
 [x] An unterminated attribute that start with a quote generates a warning
 [x] Malformed BBCodes are ignored
 [x] A BBCode with autoClose enabled is automatically closed after the start tag
 [x] A BBCode with autoClose enabled is not automatically closed after the start tag if it is immediately followed by its end tag
 [x] If contentAttr is set and the corresponding attribute is not specified in tag everything from the end of the start tag and what could be the end tag is used as value
 [x] If contentAttr is set but the corresponding attribute is specified in tag the content is not used as value
 [x] When looking for the end tag while capturing content for contentAttr the search is case insensitive
 [x] When looking for the end tag while capturing content for contentAttr the suffix is taken into account

s9e\Toolkit\Tests\TextFormatter\Plugins\CensorConfig
 [x] getConfig returns false if no words were added
 [x] Generates a regexp
 [x] Accept custom replacement for specific words
 [x] Default replacement can be customized at loading time
 [x] Tag name can be customized at loading time
 [x] Attribute name can be customized at loading time
 [x] Does not attempt to create its tag if it already exists

s9e\Toolkit\Tests\TextFormatter\Plugins\CensorParser
 [x] Replaces censored words with default replacement
 [x] Can censor unicode words
 [x] Replaces censored words with custom replacement
 [x] Censored words can use an asterisk at the start as a joker
 [x] Censored words can use an asterisk in the middle as a joker
 [x] Censored words can use an asterisk at the end as a joker
 [x] The asterisk can match multiple letters
 [x] The asterisk can match zero letters
 [x] The asterisk can match unicode letters
 [x] Censored words can use a question mark as a joker for one character
 [x] Censored words can use a question mark as a joker for zero character
 [x] The question mark does not match multiple characters
 [x] The question mark can match a digit
 [x] The question mark can match a symbol
 [x] The question mark can match an unicode letter
 [x] Can replace censored unicode words with custom replacement
 [x] Censored words are case insensitive
 [x] Default replacement can be customized at loading time
 [x] Tag name can be customized at loading time
 [x] Attribute name can be customized at loading time
 [x] Does not attempt to create its tag if it already exists

s9e\Toolkit\Tests\TextFormatter\Plugins\EmoticonsConfig
 [x] getConfig returns false if no emoticons were added
 [x] Tag name can be customized at loading time
 [x] Emoticons xsl is automatically updated when emoticons are added
 [x] Xsl auto update can be disabled by calling disableAutoUpdate
 [x] Xsl auto update can be reenabled by calling enableAutoUpdate
 [x] Xsl update can be manually triggered by calling updateXSL

s9e\Toolkit\Tests\TextFormatter\Plugins\EmoticonsParser
 [x] An emoticon can be replaced by an img tag
 [x] An emoticon can be replaced by any html
 [x] Emoticons are replaced everywhere in the text

s9e\Toolkit\Tests\TextFormatter\Plugins\FabricConfig
 [x] Creates an URL tag by default
 [x] Creates an IMG tag by default
 [x] Creates a DL tag by default
 [x] Creates a DT tag by default
 [x] Creates a DD tag by default
 [x] Creates an EM tag by default
 [x] Creates an I tag by default
 [x] Creates a STRONG tag by default
 [x] Creates a B tag by default
 [x] Creates a CITE tag by default
 [x] Creates a DEL tag by default
 [x] Creates an INS tag by default
 [x] Creates a SUPER tag by default
 [x] Creates a SUB tag by default
 [x] Creates a CODE tag by default
 [x] Creates a SPAN tag by default
 [x] Creates a NOPARSE tag by default
 [x] Creates an ACRONYM tag by default
 [x] Generates a regexp for images and links
 [x] Generates a regexp for block modifiers
 [x] Generates a regexp for phrase modifiers
 [x] Generates a regexp for acronyms
 [x] Generates a regexp for table row

s9e\Toolkit\Tests\TextFormatter\Plugins\FabricParser
 [x] Supports link
 [x] Supports link with title
 [x] Supports link with no url
 [x] Supports image
 [x] Supports image with alt text
 [x] Supports image with link
 [x] Supports image with alt text and link
 [x] Supports phrase modifier emphasis
 [x] Supports phrase modifier strong
 [x] Supports phrase modifier italic
 [x] Supports phrase modifier bold
 [x] Supports phrase modifier citation
 [x] Supports phrase modifier deleted text
 [x] Supports phrase modifier inserted text
 [x] Supports phrase modifier superscript
 [x] Supports phrase modifier subscript
 [x] Supports phrase modifier span
 [x] Supports phrase modifier span with class
 [x] Supports phrase modifier span with multiple classes
 [x] Supports phrase modifier code
 [x] Supports phrase modifier code with stx
 [x] Supports acronyms

s9e\Toolkit\Tests\TextFormatter\Plugins\GenericConfig
 [x] getConfig returns false if no replacements were added
 [x] getConfig creates a regexp for each replacement
 [x] addReplacement returns the name of the tag created
 [x] addReplacement creates attributes named after Python style subpatterns
 [x] addReplacement creates attributes named after Perl angle brackets style subpatterns
 [x] addReplacement creates attributes named after Perl single quotes style subpatterns
 [x] addReplacement throws an exception if the regexp is invalid

s9e\Toolkit\Tests\TextFormatter\Plugins\GenericParser
 [x] Handles attributes

s9e\Toolkit\Tests\TextFormatter\Plugins\WittyPantsConfig
 [x] Tag name can be customized at loading time
 [x] Attribute name can be customized at loading time
 [x] Does not attempt to create its tag if it already exists

s9e\Toolkit\Tests\TextFormatter\Plugins\WittyPantsParser
 [x] Single quotes enclosing text with no line break are converted to quotation marks
 [x] Double quotes enclosing text with no line break are converted to quotation marks
 [x] Three consecutive dots are converted to an ellipsis
 [x] Two consecutive hypens are converted to an en dash
 [x] Three consecutive hypens are converted to an em dash
 [x] Parentheses around the letters tm in lowercase are replaced with the trademark symbol
 [x] Parentheses around the letters tm in uppercase are replaced with the trademark symbol
 [x] Parentheses around the letter c in lowercase are replaced with the copyright symbol
 [x] Parentheses around the letter c in uppercase are replaced with the copyright symbol
 [x] Parentheses around the letter r in lowercase are replaced with the registered symbol
 [x] Parentheses around the letter r in uppercase are replaced with the registered symbol
 [x] A single quote before a letter at the start of a line is replaced with an apostrophe
 [x] A single quote between two letters is replaced with an apostrophe
 [x] A single quote between a letters and whitespace is replaced with an apostrophe
 [x] A single quote after a letters at the end of the text is replaced with an apostrophe
 [x] A single quote between a letters and punctuation is replaced with an apostrophe
 [x] A single quote before a two digits number at the start of a line is replaced with an apostrophe
 [x] A single quote that is part of a pair of quotation marks is not replaced with an apostrophe
 [x] A single quote after a digit and before the letter s is replaced with an apostrophe
 [x] A single quote after a digit is replaced with a prime
 [x] A double quote after a digit is replaced with a double prime
 [x] The letter x preceded by a number and followed by a number is replaced with a multiplication sign
 [x] The letter x preceded by a number and whitespace and followed by whitespace and a number is replaced with a multiplication sign
 [x] The letter x between numbers with primes is replaced with a multiplication sign
 [x] A single quote between two letters is converted to an apostrophe

